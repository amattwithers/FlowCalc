#!/usr/bin/env python3

###################################################
# Python Code to Calculate Flow stuff
#
#
#
#
###################################################

import numpy as np
import matplotlib.pyplot as plt


def calc_load(area, flow, bfi, svol, rfc, bfc, sfc, rca):

    # Check input is correct
    if (bfi > 1.0):
        print("Error")
        return False

    # Calculate flows
    bflow = bfi * flow  # Base flow
    rflow = (1.0 - bfi) * flow  # Runoff flow

    bvol = area * bflow * 1.0e4  # Base Flow Volume
    rvol = (rca/100) * area * rflow * 1.0e4  # Runoff Flow Volume

    bload = bvol * bfc * 1.0e-6  # Base Load/kg
    sload = svol * sfc * 1.0e-6  # Source Load/kg
    rload = rvol * rfc * 1.0e-6  # Runoff Load/kg

    tot_load = bload + sload + rload
    tot_flow = bvol + rvol + svol
    new_conc = (tot_load * 1.0e6) / tot_flow

    return new_conc


def sampler():
    '''Function to sample to parameter space'''

    # Sampling flow, bfi, svol, rfc, bfc, sfc

    data = np.zeros((1000000, 7))
    i = 0
    for flow in range(0, 10, 1):
        # print(flow*50)
        for bfi in range(0, 10, 1):
            # print(bfi/10)
            for svol in range(0, 10, 1):
                # print(svol*100000)
                for rfc in range(0, 10, 1):
                    # print(rfc/10)
                    for bfc in range(0, 10, 1):
                        # print(bfc/10)
                        for sfc in range(0, 10, 1):
                            # print(sfc/10)
                            conc = calc_load(20000.0, (1+flow)*50.0, bfi/10.0, svol*100000.0, rfc/10.0, bfc/10.0, sfc/10.0, 50.0)
                            data[i][0] = (1+flow)*50.0
                            data[i][1] = bfi/10.0
                            data[i][2] = svol*100000.0
                            data[i][3] = rfc/10.0
                            data[i][4] = bfc/10.0
                            data[i][5] = sfc/10.0
                            data[i][6] = conc
                            # print(i)
                            i += 1

    return data


if __name__ == '__main__':

    print("Running")

    # Define some constants
    area = 28700  # Catchment area/ha
    flow = 367  # Total flow in mm
    bfi = 0.4  # Base Flow Index
    svol = 100000  # Source Volume/L
    rfc = 0.329  # Runoff flow conc mg L^-1
    bfc = 0.1  # Base flow conc mg L^-1
    sfc = 0.1  # Source flow conc mg L^-1
    rca = 50  # Percentage of catchment contributing to runoff

    conc = calc_load(area, flow, bfi, svol, rfc, bfc, sfc, rca)

    print("New Conc = %1.4f mg/L" % conc)

    # Testing

    data = np.zeros((10,10))
    flow_dat = np.zeros(10)
    bfi_dat = np.zeros(10)

    for flow in range(0, 10, 1):
        # print(flow*50)
        for bfi in range(0, 10, 1):
            # print(bfi/10)
            data[flow, bfi] = calc_load(20000.0, (1+flow)*50.0, bfi/10.0, 300000.0, 0.3, 0.1, 0.15, 50.0)
            flow_dat[flow] = (1+flow)*50.0
            bfi_dat[bfi] = bfi/10.0

    plt.figure()
    plt.contour(flow_dat, bfi_dat, data)
    plt.show()
